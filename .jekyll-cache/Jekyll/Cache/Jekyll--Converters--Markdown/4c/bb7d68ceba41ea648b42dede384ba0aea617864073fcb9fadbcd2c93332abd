I"¾!<h2 id="what-is-tensorboard">What is TensorBoard?</h2>

<p>TensorBoard is a module of Tensorflow that provides a suite of visualisation tools that help in understanding, debugging and optimize the model created in Tensorflow.</p>

<h2 id="installing-tensorboard">Installing TensorBoard</h2>

<p>TensorBoard is installed along with Tensorflow.
It can also be installed as a standalone software from <a href="https://github.com/dmlc/tensorboard">Standalone TensorBoard</a></p>

<h2 id="key-concepts">Key Concepts</h2>

<p>TensorBoard works by reading summary data from Tensorflow event files which is generated by tensorflow.</p>

<p>Tensorflow creates a computational graph of the neural network model implemented.This model is then stored as a graph using the <strong>summary</strong> method.The name field in the Tensorflow <strong>variables</strong>, <strong>placeholders</strong>, <strong>operations</strong>, and <strong>name_scopes</strong> are used to annotate the nodes in the graph. These graphs are written to files and stored in a directory indicated in the <strong>summary.FileWriter</strong> method.We can select which nodes to be included in the graph using the <strong>summary.merge</strong> method. In order to select all the nodes to be included in the graph by using the <strong>summary.merge_all</strong> method.This summary (in the form of a protocol buffer) is added to the event file using the <strong>add_summary</strong> method.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c1">#Although the model in this code-segment will not converge, 
#this is just to show how tensorflow creates and saves summaries 
#in event files.
</span><span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">N</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">placeholder</span><span class="p">(</span><span class="n">tf</span><span class="o">.</span><span class="n">float32</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="p">[</span><span class="n">N</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="n">name</span><span class="o">=</span><span class="s">'X'</span><span class="p">)</span> 
<span class="n">y</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">placeholder</span><span class="p">(</span><span class="n">tf</span><span class="o">.</span><span class="n">float32</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="p">[</span><span class="n">N</span><span class="p">,</span><span class="n">N</span><span class="p">],</span><span class="n">name</span><span class="o">=</span><span class="s">'y'</span><span class="p">)</span> 
<span class="k">with</span> <span class="n">tf</span><span class="o">.</span><span class="n">name_scope</span><span class="p">(</span><span class="s">'fc_layer'</span><span class="p">):</span>
    <span class="n">W</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">Variable</span><span class="p">(</span><span class="n">tf</span><span class="o">.</span><span class="n">truncated_normal</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="n">N</span><span class="p">],</span> <span class="n">stddev</span><span class="o">=</span><span class="mf">0.1</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s">'W'</span><span class="p">)</span>
    <span class="n">b</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">Variable</span><span class="p">(</span><span class="n">tf</span><span class="o">.</span><span class="n">constant</span><span class="p">(</span><span class="mf">0.1</span><span class="p">,</span><span class="n">shape</span><span class="o">=</span><span class="p">[</span><span class="n">N</span><span class="p">]),</span><span class="n">name</span><span class="o">=</span><span class="s">'b'</span><span class="p">)</span>
    <span class="n">tf</span><span class="o">.</span><span class="n">summary</span><span class="o">.</span><span class="n">histogram</span><span class="p">(</span><span class="s">'weights'</span><span class="p">,</span><span class="n">W</span><span class="p">)</span> <span class="c1">#values of W will be shown as a histogram plot
</span>    <span class="n">tf</span><span class="o">.</span><span class="n">summary</span><span class="o">.</span><span class="n">histogram</span><span class="p">(</span><span class="s">'biases'</span><span class="p">,</span><span class="n">b</span><span class="p">)</span> <span class="c1">#values of W will be shown as a histogram plot
</span>    <span class="n">y_</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">matmul</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">W</span><span class="p">)</span> <span class="o">+</span> <span class="n">b</span>
<span class="k">with</span> <span class="n">tf</span><span class="o">.</span><span class="n">name_scope</span><span class="p">(</span><span class="s">'loss_func'</span><span class="p">):</span>    
    
    <span class="n">tf</span><span class="o">.</span><span class="n">summary</span><span class="o">.</span><span class="n">scalar</span><span class="p">(</span><span class="s">'loss'</span><span class="p">,</span><span class="mf">0.05</span><span class="p">)</span>


<span class="n">sess</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">Session</span><span class="p">()</span>
<span class="n">merged_summary</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">summary</span><span class="o">.</span><span class="n">merge_all</span><span class="p">()</span>
<span class="n">writer</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">summary</span><span class="o">.</span><span class="n">FileWriter</span><span class="p">(</span><span class="s">"./graphs/"</span><span class="p">,</span> <span class="n">graph</span><span class="o">=</span><span class="n">sess</span><span class="o">.</span><span class="n">graph</span><span class="p">)</span>
<span class="n">sess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">tf</span><span class="o">.</span><span class="n">global_variables_initializer</span><span class="p">())</span>
<span class="n">s</span> <span class="o">=</span> <span class="n">sess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">merged_summary</span><span class="p">,</span><span class="n">feed_dict</span><span class="o">=</span><span class="p">{</span><span class="n">x</span><span class="p">:</span><span class="n">np</span><span class="o">.</span><span class="n">ones</span><span class="p">((</span><span class="n">N</span><span class="p">,</span><span class="mi">1</span><span class="p">)),</span><span class="n">y</span><span class="p">:</span><span class="n">np</span><span class="o">.</span><span class="n">ones</span><span class="p">((</span><span class="n">N</span><span class="p">,</span><span class="n">N</span><span class="p">))})</span>
<span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>  
<span class="n">writer</span><span class="o">.</span><span class="n">add_summary</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">i</span><span class="p">)</span></code></pre></figure>

<h2 id="running-tensorboard">Running TensorBoard</h2>

<p>Now that the event files have been created and stored in the directory[./graphs], running tensorboard with logdir pointing to the directory where the event files have been stored will give us a visualization of the model in the web browser.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">tensorboard</span> <span class="o">--</span><span class="n">logdir</span><span class="o">=./</span><span class="n">graphs</span></code></pre></figure>

<h2 id="comments">Comments</h2>

<p>Please feel free to comment in the comment section below</p>
:ET