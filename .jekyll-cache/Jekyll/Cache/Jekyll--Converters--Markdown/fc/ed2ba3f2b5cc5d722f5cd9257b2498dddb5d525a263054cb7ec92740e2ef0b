I"ö<h2 id="some-prerequisites">Some Prerequisites</h2>

<h3 id="what-is-a-variable">What is a variable?</h3>

<p>A  variable is a storage location for a value. Linux has environment variables. It can store strings, numbers , etc. just like the variables in C, C++, python, or any other programming language. It even has a scope, just like the variables in other programming languages! Based on scopes Linux environments variables can be classified into 2 different categories:</p>

<ol>
  <li>Local Variables</li>
  <li>Global Variable</li>
</ol>

<h4 id="local-variables">Local Variables</h4>
<p>Local variables are set by typing  &lt;variable_name&gt;= &lt;variable_value&gt; (i.e without the export command).
Local variables can only be accessed by the terminal where it is declared and not by any program even if it is run from the terminal itself.</p>

<h4 id="global-variables">Global Variables</h4>
<p>Global variables are set by typing export  &lt;variable_name&gt;= &lt;variable_value&gt;. The export command ensures that the variable be exported to any child process forked from that terminal. In short, it ensure that the variable set is global.</p>

<h4 id="understanding-the-difference">Understanding the Difference</h4>

<p>There is a simple way to understand the difference between local and global environmnent variables.</p>

<p>Open a terminal</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">export </span><span class="nv">global_var</span><span class="o">=</span><span class="s2">"This is a global variable"</span>
local_var <span class="o">=</span> <span class="s2">"This is a local variable"</span>
<span class="nb">echo</span> <span class="nv">$global_var</span>
<span class="nb">echo</span> <span class="nv">$local_var</span></code></pre></figure>

<p>Now open tmuxa tmux session. Inside the session, type:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">echo</span> <span class="nv">$global_var</span>
<span class="nb">echo</span> <span class="nv">$local_var</span></code></pre></figure>

<p>You would notice that the local variable inside the tmux session contains no value whereas the global variable outputs the value that it has been assigned.
You can see all the variables defined using the command â€˜envâ€™.
A variable is unset by typing unset &lt;variable_name&gt;</p>

<h4 id="some-important-paths-in-linux">Some Important Paths in Linux:</h4>
<p>In this journey of learning how to install  packages locally in linux, we need to about two very important global environment variables:</p>
<ol>
  <li>PATH</li>
  <li>LD_LIBRARY_PATH</li>
</ol>

<h3 id="what-is-path">what is PATH?</h3>
<p>PATH is a list of colon separated directories in which the system looks for executable files. When we type a command the system looks for the executable binaries in each of these directories and executes them if found or else returns an error stating â€˜command not foundâ€™. This lookup by the system occurs in a left-to-right fashion. That is,the system first looks for the executable in the left-most directory in the colon separated list and proceeds on to the next if not found.
This sequence of lookup is necessary to understand because if you have two different executable files with the same name but at different locations(obviously!!), say /usr/local/bin/python and ./anaconda/bin/python , and you want to execute the ./anaconda/bin/python ,then you would have to put ./anaconda/bin(absolute location is preferred, this is a relative location) to the left of /usr/bin in the colon separated list of PATH.</p>

<h3 id="what-is-ld_library_path">What is LD_LIBRARY_PATH?</h3>
<p>Similar to PATH, LD_LIBRARY_PATH stores the  colon separated list of  directories where the system should search for libraries first, before the standard set of directories. Just like PATH, the lookup in the LD_LIBRARY_PATH also occurs in a left-to-right manner.</p>

<h3 id="hands-on">Hands On!!!</h3>
<p>In this demo we will be installing GNU-aspell locally.</p>

<ol>
  <li>Download and extract the aspell source package: Download the package from this <a href="https://ftp.gnu.org/gnu/aspell/aspell-0.60.7.tar.gz">link</a> and extract it using</li>
</ol>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash"> <span class="nb">tar</span> <span class="nt">-xf</span> aspell-0.60.7.tar.gz </code></pre></figure>
<p>command.</p>
<ol>
  <li>Go inside the directory and type <code class="highlighter-rouge">bash ./configure</code></li>
</ol>

<p>(Not yet Finished!! :P)</p>
:ET